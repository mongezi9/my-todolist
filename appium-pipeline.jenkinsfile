#!groovy
//Jenkinsfile (Declarative Pipeline)

// -- Directory where the Project Files are located.  
def JOB_FILES_DIRECTORY
// -- Directory where the Platform Tools is located
def PLATFORM_TOOL_DIRECTORY
// -- Directory where the Android Emulator is located
def EMULATOR_DIRECTORY
// -- Path of the Suite to execute
def SUITE_PATH



// -- Keep only 15 builds
echo 'Discard old build'
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', 
    daysToKeepStr: '', numToKeepStr: "15"))])

pipeline {
    agent any
    // -- Display a timestamp on the log.
    options{timestamps()}

    stages {
         
      stage("Load application") {
        def dockerHome = tool 'myDocker'
        def mavenHome  = tool 'myMaven'
        env.PATH = "${dockerHome}/bin:${mavenHome}/bin:${env.PATH}"
        
        steps {

             script {
                try {
                      sh "docker build -t my_to_do_list ."
                      sh "docker run -p 8081:8081 -d my_to_do_list"
                } catch (err) { 
                    echo "The emulator is not open"                                          
                }
            }      

        }
    }

    stage("SonarQube") {
        steps {
            script {
                try {
                    echo "Analizing the project with SonarQube."
                    withSonarQubeEnv("Sonar Server") {
                        sh "mvn sonar:sonar"
                    }
                } catch (err) { 
                    echo "The SonarQube analysis failed"                                          
                }
            }  
        }
    }

    } // -- End stage
    // -- Parameters needed: JOB_SLACK_CHANNEL_NOTIFICATION, JOB_NAME, BUILD_NUMBER, BUILD_URL
    // ----------------------------------------------
    // -- STAGE: Post Build actions
    // ----------------------------------------------
    post ("Post-Build Actions"){
        success ("JOB SUCCESS"){
            sh "echo Success Job"
         //   slackSend botUser: true, color: "#14910c", channel: "#"+"${JOB_SLACK_CHANNEL_NOTIFICATION}", message: "The Pipeline: `${JOB_NAME}`, `${BUILD_NUMBER}` finished successfully (<${BUILD_URL}|Open>)."
        }

        failure ("JOB FAILURE"){
            sh "echo Failure Job"
         //  slackSend botUser: true, color: "#d6280d", channel: "#"+"${JOB_SLACK_CHANNEL_NOTIFICATION}", message: "The Pipeline: `${JOB_NAME}`, `${BUILD_NUMBER}` finished with a failure (<${BUILD_URL}|Open>)"   
        }

        unstable ("JOB UNSTABLE") {
            sh "echo Unstable Job"
         //   slackSend botUser: true, color: "#fded72", channel: "#"+"${JOB_SLACK_CHANNEL_NOTIFICATION}", message: "The Pipeline: `${JOB_NAME}`, `${BUILD_NUMBER}` finished unstable (<${BUILD_URL}|Open>)" 
        }

        aborted ("JOB ABORTED") {
            sh "echo Aborted Job"
         //   slackSend botUser: true, color: "#a6a6a6", channel: "#"+"${JOB_SLACK_CHANNEL_NOTIFICATION}", message: "The Pipeline: `${JOB_NAME}`, `${BUILD_NUMBER}` was aborted (<${BUILD_URL}|Open>)"
        }
    }
}